"use client"

import { FC } from "react";
import Link from "next/link";
import { useRouter } from 'next/navigation'
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { oneDark, oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';
import CopyCliboardButton from "@/components/CopyClipboardButton";
import { Copy } from "lucide-react";
import { ScrollArea } from "@/components/ui/scroll-area"
import {Button} from "@/components/ui/button"

type ExploitModalProps = {
    log_id: string,
    exploit: Exploit,
}

const ExploitModal: FC<ExploitModalProps> = ({log_id, exploit}): JSX.Element => {
    const router = useRouter();

    const exploitString = atob(exploit.exploit);

    return (
        <>
            <dialog
                className="fixed left-0 top-0 w-full h-full bg-black bg-opacity-50 z-[99] overflow-y-hidden backdrop-blur flex justify-center items-center">
                <div className="dark:bg-darksurface-100 dark:border-darksurface-400 border-2 dark:bg-darksurface-100 b-2 rounded-xl m-auto p-8">
                    <div className="flex flex-col items-center">
                        <div className="w-full flex flex-row items-center justify-between gap-10">
                            <h2 className="text-xl">Python POC</h2>
                            <CopyCliboardButton text={exploitString} toastText="Python POC copied to clipboard" tooltipText="Copy to clipboard">
                                <Copy className="w-4 h-4"/>
                            </CopyCliboardButton>
                        </div>
                        <ScrollArea>
                            <SyntaxHighlighter language="python" style={oneDark} showLineNumbers>
                                {exploitString}
                            </SyntaxHighlighter>
                        </ScrollArea>
                        <br/>
                        <Button variant="destructive" onClick={() => {router.back()}} className="bg-red-500 text-white p-2">Close</Button>
                    </div>

                </div>
            </dialog>
        </>
    );
}

export default ExploitModal;