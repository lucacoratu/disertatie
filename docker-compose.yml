version: '3.3'

services:
  cassandra:
    image: cassandra
    ports:
      - 9042:9042
    volumes:
      - ./data/cassandra:/var/lib/cassandra
      - ./config/:/etc/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=honeypot
  init-cassandra:
    image: cassandra
    depends_on:
      - cassandra # IMPORTANT: this init container can only start up after the original container is started
    restart: "no" # IMPORTANT: the restart should be set to "no" so that the init container is used only once after the original container is started
    entrypoint: [ "/init.sh" ] # executing the init script
    volumes:
      - ./scripts/cassandra/init.sh:/init.sh # the init script is added via volumes
      
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    # 8.x
    environment: ['CLI_JAVA_OPTS=-Xms2g -Xmx2g','ES_JAVA_OPTS=-Xmx4g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    volumes:
      - ./data/elastic:/usr/share/elasticsearch/data
    networks:
      - elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:    
      resources:
          limits:
            cpus: '2.0'
          reservations:
            cpus: '1.0'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
        #ELASTICSEARCH_HOSTS: '[http://elasticsearch:9200]'
    ports:
      - 5601:5601
    networks:
      - elastic
    deploy:    
      resources:
          limits:
            cpus: '2.0'
          reservations:
            cpus: '1.0'

networks:
  elastic: